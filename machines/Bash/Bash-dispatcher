#!/usr/bin/env bash
# @(#) $HOME/0/Scene/1/db0/machines/Bash/Bash-dispatcher
# Last-edited: 2022.10.30.1945.Sun -- Danny Quah (me@DannyQuah.com)
# ----------------------------------------------------------------
# Revision History:
#  % Sun 2020.07.19.1458 -- Danny Quah (me@DannyQuah.com)
#    Added into Bash-dispatcher git use functions
#    that were previously in Common/Shellsrc;
#    zsh needs to run git plugin for those and others as certain
#    themes such as gallois need a lot of git plugin
#  % Tue 2013.01.22.1622 -- Danny Quah (dquah@spartan)
#    First draft.  Code common to both Linux and Windows
# ----------------------------------------------------------------
#
# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=500
HISTFILESIZE=1000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# If this gets too complicated, break it into different files that
# can then be called with "." or source.
# $
# ################################
## vi mode in command line
set -o vi
#
# ################################
# Shorten the prompt
# Can also instead use PROMPT_DIRTRIM option, e.g, set PROMPT_DIRTRIM=3
# http://www.linuxselfhelp.com/howtos/Bash-Prompt/Bash-Prompt-HOWTO-2.html
# export PS1="[\@ \W]$ "
export PS1='[\@ `hostname` `eval dqTruncFolder`]$ '
dqTruncFolder() {
  echo "$PWD" | sed 's/.*\(......\)/\.\.\.\1/'
}
#
# ################################
# enable color support of ls and also add aliases
if [ -x /usr/bin/dircolors ]; then
  test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
  alias lc='/bin/ls --color=auto'
  #alias dir='dir --color=auto'
  #alias vdir='vdir --color=auto'

  alias grep='grep --color=auto'
  alias fgrep='fgrep --color=auto'
  alias egrep='egrep --color=auto'
fi

# ################################
# git use - extract from oh-my-zsh git plugin
alias gitcred="git config --global credential.helper 'cache --timeout=3600'"
alias gitremote='git remote update'
alias ga='git add'
# alias gaa="git add --all"
alias gcam='git commit -am'
alias gcmsg='git commit -m'
alias gp='git push'
alias gpd='git push --dry-run'
alias grmc='git rm --cached'
alias gss='git status -s'
#
# ################################
# rsync use 
# --dry-run as needed  
## alias rsync-sync="rsync --archive --delete -P --verbose --update --human-readable --exclude=.git "

# These have been replaced by the shell script qrsync
# From source xbook to whatever machine I'm on
## alias rsync-xb-lky='rsync-sync xbook:0/Props/1/LKYSPP-Deans-Office ~/0/Props/1'
## alias rsync-xb-wp='rsync-sync xbook:0/Sound/1/Wp ~/0/Sound/1/'
## alias rsync-xb-ww='rsync-sync xbook:0/Board/1/Ww ~/0/Board/1/'
## alias rsync-xb-db0='rsync-sync xbook:0/Scene/1/db0 ~/0/Scene/1/'
#
# export HISTIGNORE="&:ls:ls *:mutt:[bf]g:exit" # no repeats in shell history

# Aliases - general
# unalias ls
# unalias l

if [ -f ${HOME}/bin/Shellsrc ]; then
  source ${HOME}/bin/Shellsrc
fi

function acs {
  apt-cache search $1 | grep $2
}

# eof Bash-dispatcher
